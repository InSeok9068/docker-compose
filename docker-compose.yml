# ports 외부:내부
# volumes PC:도커

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./app/caddy:/data
      - ./config/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - pocketbase
      - portainer
      - grafana
      - prometheus
      - open-webui

  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    container_name: pocketbase
    restart: unless-stopped
    ports:
      - 8090:8090
    volumes:
      - /path/to/data:/pb_data
      - /path/to/public:/pb_public
      - /path/to/hooks:/pb_hooks
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8090/api/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./app/redis/data:/data

  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    ports:
      - 8888:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/portainer/data:/data

  # 시계열 데이터베이스
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./app/prometheus:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  # 데이터 시각화 도구
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    volumes:
      - ./app/grafana:/var/lib/grafana

  # 로그 수집 서버
  loki:
    container_name: loki
    image: grafana/loki
    ports:
      - 3100:3100
    depends_on:
      - grafana
    volumes:
      - ./app/loki:/loki
    #   - ./config/loki.yml:/etc/loki/loki.yml
    # command: -config.file=/etc/loki/loki.yml

  # 로그 전달 도구
  promtail:
    container_name: promtail
    image: grafana/promtail
    depends_on:
      - loki
    volumes:
      - /var/log:/var/log
      - ./config/promtail.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml

  # AI 모델 서버
  ollama:
    container_name: ollama
    image: ollama/ollama
    ports:
      - 11434:11434
    volumes:
      - ./app/ollama:/root/.ollama

  # AI 모델 WEB UI
  open-webui:
    container_name: open-webui
    image: ghcr.io/open-webui/open-webui
    ports:
      - 8282:8080
    depends_on:
      - ollama
    volumes:
      - ./app/open-webui:/app/backend/data
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434

  # squash-helper:
  #   container_name: squash-helper
  #   image: ghcr.io/dlstj/squash-helper:release
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
